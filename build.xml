<?xml version="1.0" encoding="utf-8" ?>
<project name="MapExplorer" basedir="." default="devWar" xmlns:ivy="antlib:org.apache.ivy.ant">
  <!-- Configure or override this property to match your enviroment --> 
  <property name="mapcommon.dir" location="../MapCommon/" />
  <property name="lib.dir" location="war/WEB-INF/lib/" />
  <property name="buildlib.dir" location="lib/" />
  <property name="war.file" location="war" />
  <property name="resources" location="resources/" />

  <ivy:settings file="${mapcommon.dir}/ivy/ivysettings.xml"/>

  <taskdef name="deploy" classname="org.apache.catalina.ant.DeployTask" />
  <taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask" />

  <target name="-retrieve">
    <ivy:resolve />
    <ivy:cachepath pathid="build.path" conf="build" />
    <ivy:cachepath pathid="runtime.path" conf="runtime" />
  </target>

  <target name="libs" depends="-retrieve,-copy-servlet,-clean-libdir,-make-libdir,-clean-buildlibdir,-make-buildlibdir,-replace-servlet" description="Copy libs and other resources to WEB-INF/lib">
  	<ivy:retrieve pattern="${lib.dir}/[artifact]-[revision]-[type].[ext]" conf="runtime" />
  </target>

  <target name="-lib-check">	
  	<condition property="libdir-exists">
  	  <available file="${lib.dir}"/>
  	</condition>
  	
  	<condition property="buildlibdir-exists">
      <available file="${buildlib.dir}"/>
  	</condition>

  	<condition property="gwtservlet-exists">
      <available file="${lib.dir}/gwt-servlet.jar"/>
  	</condition>
  </target>
  
  <target name="-copy-servlet" depends="-lib-check" if="gwtservlet-exists">
  	<copy file="${lib.dir}/gwt-servlet.jar" todir="${lib.dir}/.." />
  </target>
	
  <target name="-make-libdir" depends="-lib-check" unless="libdir-exists">
    <mkdir dir="${lib.dir}" />
  </target>
	
  <target name="-clean-libdir" depends="-lib-check" if="libdir-exists">
    <delete dir="${lib.dir}" />
    <mkdir dir="${lib.dir}" />
  </target>
  
  <target name="-make-buildlibdir" depends="-lib-check" unless="buildlibdir-exists">
    <mkdir dir="${buildlib.dir}" />
  </target>
	
  <target name="-clean-buildlibdir" depends="-lib-check" if="buildlibdir-exists">
    <delete dir="${buildlib.dir}" />
	<mkdir dir="${buildlib.dir}" />
  </target>
  
  <target name="-replace-servlet" depends="-lib-check" if="gwtservlet-exists">
    <copy file="${lib.dir}/../gwt-servlet.jar" todir="${lib.dir}" />
  	<delete file="${lib.dir}/../gwt-servlet.jar" />
  </target>
	
  <target name="eclipse-libs" depends="-retrieve,-copy-servlet,-clean-libdir,-make-libdir,-clean-buildlibdir,-make-buildlibdir,-replace-servlet" description="Copy libs and other resources to WEB-INF/lib">
	<ivy:retrieve pattern="${lib.dir}/[artifact]-[revision]-[type].[ext]" conf="eclipseruntime" />
  	<ivy:retrieve pattern="${buildlib.dir}/[artifact]-[revision]-[type].[ext]" conf="eclipsebuild" />
  </target>
	
  <target name="clean" depends="-copy-servlet,-clean-libdir,-make-libdir,-clean-buildlibdir,-make-buildlibdir,-replace-servlet" description="Cleans this project">
    <delete dir="war/WEB-INF/classes" failonerror="false" />
  	<delete dir="war/WEB-INF/deploy" failonerror="false" />
  	<delete dir="war/mapexplorer" failonerror="false" />
  	<delete dir="gwt-UnitCache" failonerror="false" />
  	<delete dir="test-classes" failonerror="false" />
  	<delete file="test.xlsx" failonerror="false" />
  	<delete file="explorer.war" failonerror="false" />
  </target>

  <target name="-javac-tests" depends="-javac" description="Compile java source">
	<mkdir dir="test-classes" />
	<javac srcdir="test" includes="**" encoding="utf-8" destdir="test-classes" source="1.6" target="1.6" nowarn="true" debug="true" debuglevel="lines,vars,source">
      <classpath refid="build.path" /> 
	</javac>
  </target>

  <target name="tests" depends="-javac-tests" description="Run unit tests">
    <junit printsummary="yes" haltonfailure="no">
      <classpath>
      	<path refid="build.path" />
      	<path refid="runtime.path" />
      	<path path="classes:test-classes"/>
      	<path path="classes:war/WEB-INF/classes"/>
      </classpath> 
        <batchtest>
          <fileset dir="test-classes" excludes="resources/**"/>
          <formatter type="plain" usefile="false" />
        </batchtest>
    </junit>
  </target>

  <target name="-javac" depends="libs" description="Compile java source">
    <mkdir dir="war/WEB-INF/classes" />
    <copy todir="war/WEB-INF/classes">
      <fileset dir="src" excludes="**/*.java"/>
    </copy>
    <javac srcdir="src" includes="**" encoding="utf-8" destdir="war/WEB-INF/classes" source="1.6" target="1.6" nowarn="true" debug="true" debuglevel="lines,vars,source">
        <classpath>
        	<path refid="build.path" />
        	<path refid="runtime.path" />
        </classpath> 
    </javac>
  </target>

  <target name="-gwtc" depends="-javac" description="GWT compile to JavaScript">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
      <classpath>
      	<pathelement location="war/WEB-INF/classes" />
        <path refid="build.path" />
      	<path refid="runtime.path" />
        <pathelement location="src" />
      </classpath>
    	
      <jvmarg value="-Xmx256M" />
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg value="uk.ac.ox.map.explorer.MapExplorer" />
      <arg line="-style OBF" />
      <arg line="-optimize 9" />

    </java>
  </target>

  <target name="-war" description="Create a war file." depends="-gwtc">
    <delete file="${war.file}/WEB-INF/classes/urls.properties" />
    <delete file="${war.file}/WEB-INF/classes/hibernate.properties" />
  	<delete file="${war.file}/WEB-INF/classes/log4j.properties" />
  	<delete file="${war.file}/WEB-INF/classes/logging.properties" />
    <copy todir="${war.file}/WEB-INF/classes">
      <fileset file="${resource.dir}/urls.properties" />
      <fileset file="${resource.dir}/hibernate.properties" />
      <fileset file="${resource.dir}/log4j.properties" />
      <fileset file="${resource.dir}/logging.properties" />
    </copy>
  	
    <zip destfile="explorer.war" basedir="war" />

    <!-- Hack to undo previous replace of property files -->
    <delete file="${war.file}/WEB-INF/classes/urls.properties" />
    <delete file="${war.file}/WEB-INF/classes/hibernate.properties" />
  	<delete file="${war.file}/WEB-INF/classes/log4j.properties" />
  	<delete file="${war.file}/WEB-INF/classes/logging.properties" />
    <copy todir="${war.file}/WEB-INF/classes">
      <fileset file="src/urls.properties" />
      <fileset file="src/hibernate.properties" />
      <fileset file="src/log4j.properties" />
      <fileset file="src/logging.properties" />
    </copy>
  </target>

  <target name="-deploy" description="Install web application" depends="-war">
    <deploy url="${deploy.url}" username="${deploy.username}" password="${deploy.password}" path="${deploy.path}" war="${basedir}/explorer.war" />
  </target>

  <target name="-undeploy" description="-Uninstall web application">
    <undeploy url="${deploy.url}" username="${deploy.username}" password="${deploy.password}" path="${deploy.path}" />
  </target>
 
  <target name="-dev-config"> 
	<property file="resources/dev/build.properties" />
  </target>
  <target name="devWar" depends="-dev-config,-war" />
  <target name="devDeploy" depends="-dev-config,-deploy" />
  <target name="devUndeploy" depends="-dev-config,-undeploy" />
  <target name="devRedeploy" depends="-dev-config,-undeploy,-deploy" />
	
  <target name="-prod-config">
    <property file="resources/prod/build.properties" />
  </target>
  <target name="prodWar" depends="-prod-config,-war" />			
  <target name="prodDeploy" depends="-prod-config,-deploy" />
  <target name="prodUndeploy" depends="-prod-config,-undeploy" />
  <target name="prodRedeploy" depends="-prod-config,-undeploy,-deploy" />		
</project>
